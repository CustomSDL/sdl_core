apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "org.luxoft.sdl_core"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments "-DBUILD_USB_SUPPORT=OFF",
                        "-DBUILD_BT_SUPPORT=OFF",
                        "-DENABLE_SECURITY=OFF",
                        "-DENABLE_LOG=ON"
                cppFlags
                targets "smartDeviceLinkCore"
            }
        }

        ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your APK.
            abiFilters 'x86_64'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }

    task _buildFullSdlApk { task ->
        doLast {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())

            def ndkDir = System.getenv("ORG_GRADLE_NDK_DIR");
            println "NDK Folder from env: ${ndkDir}"

            if (ndkDir == null) {
                ndkDir = properties.getProperty('ndk.dir')
                println "NDK Folder from local properties: ${ndkDir}"
            }

            def cpp_lib_file = "${ndkDir}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/x86_64-linux-android/libc++_shared.so"
            println "Shared lib file: ${cpp_lib_file}"

            def third_party_libs = System.getenv("THIRD_PARTY_INSTALL_PREFIX")
            println "Third party libs from env: ${third_party_libs}"

            if (third_party_libs == null) {
                third_party_libs = properties.getProperty('third.party.dir')
                println "Third party libs from local properties: ${third_party_libs}"
            }

            def sdl_so_folder = "${project.getBuildDir()}/intermediates/cmake/debug/obj/x86_64"
            println "Output libs: ${sdl_so_folder}"

            println "Copying C++ library..."
            copy {
                from "${cpp_lib_file}"
                into "${sdl_so_folder}"
            }

            println "Copying 3rd party libs..."
            copy {
                from "${third_party_libs}/lib"
                into "${sdl_so_folder}"
            }

            println "Done!"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}
